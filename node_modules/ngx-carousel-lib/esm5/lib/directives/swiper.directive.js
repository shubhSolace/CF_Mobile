/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, HostListener, ElementRef, Renderer2, Output, EventEmitter } from '@angular/core';
/** @type {?} */
var ZERO = 0.000000000001;
/** @type {?} */
var DIRECTION = {
    LEFT: 'left',
    RIGHT: 'right',
    UP: 'up',
    DOWN: 'down',
    NONE: 'none',
};
var SwiperDirective = /** @class */ (function () {
    function SwiperDirective(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.isDown = false;
        this.initialPosX = ZERO;
        this.initialPosY = ZERO;
        this.lastPosX = ZERO;
        this.lastPosY = ZERO;
        this.swipeDistanceX = ZERO;
        this.swipeDistanceY = ZERO;
        this.firstSwipeDate = Date.now();
        this.direction = DIRECTION.NONE;
        this.onSwipeRight = new EventEmitter();
        this.onSwipeLeft = new EventEmitter();
        this.onSwipeUp = new EventEmitter();
        this.onSwipeDown = new EventEmitter();
        this.onSwipe = new EventEmitter();
        this.onSwipeStart = new EventEmitter();
        this.onSwipeEnd = new EventEmitter();
        this.swipeLeft = new EventEmitter();
        this.swipeRight = new EventEmitter();
    }
    /**
     * @return {?}
     */
    SwiperDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.getResultFromEvent = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var swipeFrameDistanceX = event.clientX - this.initialPosX - this.lastPosX;
        swipeFrameDistanceX = swipeFrameDistanceX < 30 ? swipeFrameDistanceX : 30;
        this.swipeDistanceX += swipeFrameDistanceX;
        /** @type {?} */
        var swipeFrameDistanceY = event.clientY - this.initialPosY - this.lastPosY;
        swipeFrameDistanceY = swipeFrameDistanceY < 30 ? swipeFrameDistanceY : 30;
        this.swipeDistanceY += swipeFrameDistanceY;
        this.lastPosX = event.clientX - this.initialPosX;
        this.lastPosY = event.clientY - this.initialPosY;
        /** @type {?} */
        var res = {
            velocityX: swipeFrameDistanceX,
            velocityY: swipeFrameDistanceY,
            isFinal: false,
            direction: this.direction,
            event: event,
        };
        return res;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.swipeStart = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.firstSwipeDate = Date.now();
        this.isDown = true;
        this.initialPosX = event.clientX;
        this.initialPosY = event.clientY;
        this.swipeDistanceX = ZERO;
        this.swipeDistanceY = ZERO;
        this.onSwipeStart.emit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.swipeEnd = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.initialPosX = this.lastPosX = ZERO;
        this.initialPosY = this.lastPosY = ZERO;
        this.isDown = false;
        /** @type {?} */
        var res = {
            velocityX: 0,
            velocityY: 0,
            isFinal: !this.isDown,
        };
        this.onSwipeEnd.emit(res);
        this.swipeDistanceX = ZERO;
        this.swipeDistanceY = ZERO;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.swipeMove = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var res = this.getResultFromEvent(event);
        if (res.velocityX > 0) {
            this.direction = DIRECTION.LEFT;
            this.onSwipeLeft.emit(res);
        }
        else if (res.velocityX < 0) {
            this.direction = DIRECTION.RIGHT;
            this.onSwipeRight.emit(res);
        }
        else if (res.velocityY > 0) {
            this.direction = DIRECTION.DOWN;
            this.onSwipeDown.emit(res);
        }
        else if (res.velocityY < 0) {
            this.direction = DIRECTION.UP;
            this.onSwipeUp.emit(res);
        }
        this.onSwipe.emit(res);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.onTouchStart = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var touch = event.touches[0] || event.changedTouches[0];
        this.swipeStart(touch);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.onMouseDown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.swipeStart(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.onMouseUp = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.swipeEnd(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.onTouchEnd = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var touch = event.touches[0] || event.changedTouches[0];
        this.swipeEnd(touch);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.onMouseMove = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.isDown) {
            this.swipeMove(event);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SwiperDirective.prototype.onTouchMove = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var touch = event.touches[0] || event.changedTouches[0];
        this.swipeMove(touch);
    };
    SwiperDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[swiper]',
                    exportAs: 'swiper'
                },] }
    ];
    /** @nocollapse */
    SwiperDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    SwiperDirective.propDecorators = {
        onSwipeRight: [{ type: Output }],
        onSwipeLeft: [{ type: Output }],
        onSwipeUp: [{ type: Output }],
        onSwipeDown: [{ type: Output }],
        onSwipe: [{ type: Output }],
        onSwipeStart: [{ type: Output }],
        onSwipeEnd: [{ type: Output }],
        swipeLeft: [{ type: Output }],
        swipeRight: [{ type: Output }],
        onTouchStart: [{ type: HostListener, args: ['touchstart', ['$event'],] }],
        onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }],
        onMouseUp: [{ type: HostListener, args: ['document:mouseup', ['$event'],] }],
        onTouchEnd: [{ type: HostListener, args: ['touchend', ['$event'],] }],
        onMouseMove: [{ type: HostListener, args: ['mousemove', ['$event'],] }],
        onTouchMove: [{ type: HostListener, args: ['touchmove', ['$event'],] }]
    };
    return SwiperDirective;
}());
export { SwiperDirective };
if (false) {
    /** @type {?} */
    SwiperDirective.prototype.isDown;
    /** @type {?} */
    SwiperDirective.prototype.initialPosX;
    /** @type {?} */
    SwiperDirective.prototype.initialPosY;
    /** @type {?} */
    SwiperDirective.prototype.lastPosX;
    /** @type {?} */
    SwiperDirective.prototype.lastPosY;
    /** @type {?} */
    SwiperDirective.prototype.swipeDistanceX;
    /** @type {?} */
    SwiperDirective.prototype.swipeDistanceY;
    /** @type {?} */
    SwiperDirective.prototype.firstSwipeDate;
    /** @type {?} */
    SwiperDirective.prototype.direction;
    /** @type {?} */
    SwiperDirective.prototype.onSwipeRight;
    /** @type {?} */
    SwiperDirective.prototype.onSwipeLeft;
    /** @type {?} */
    SwiperDirective.prototype.onSwipeUp;
    /** @type {?} */
    SwiperDirective.prototype.onSwipeDown;
    /** @type {?} */
    SwiperDirective.prototype.onSwipe;
    /** @type {?} */
    SwiperDirective.prototype.onSwipeStart;
    /** @type {?} */
    SwiperDirective.prototype.onSwipeEnd;
    /** @type {?} */
    SwiperDirective.prototype.swipeLeft;
    /** @type {?} */
    SwiperDirective.prototype.swipeRight;
    /**
     * @type {?}
     * @private
     */
    SwiperDirective.prototype.el;
    /**
     * @type {?}
     * @private
     */
    SwiperDirective.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpcGVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1jYXJvdXNlbC1saWIvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9zd2lwZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQVUsTUFBTSxlQUFlLENBQUM7O0lBRXZHLElBQUksR0FBRyxjQUFjOztJQUNyQixTQUFTLEdBQUc7SUFDaEIsSUFBSSxFQUFHLE1BQU07SUFDYixLQUFLLEVBQUcsT0FBTztJQUNmLEVBQUUsRUFBRyxJQUFJO0lBQ1QsSUFBSSxFQUFHLE1BQU07SUFDYixJQUFJLEVBQUcsTUFBTTtDQUNkO0FBQ0Q7SUF5QkkseUJBQ1ksRUFBYyxFQUNkLFFBQW1CO1FBRG5CLE9BQUUsR0FBRixFQUFFLENBQVk7UUFDZCxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBdEIvQixXQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ2YsZ0JBQVcsR0FBVyxJQUFJLENBQUM7UUFDM0IsZ0JBQVcsR0FBVyxJQUFJLENBQUM7UUFDM0IsYUFBUSxHQUFXLElBQUksQ0FBQztRQUN4QixhQUFRLEdBQVcsSUFBSSxDQUFDO1FBQ3hCLG1CQUFjLEdBQVcsSUFBSSxDQUFDO1FBQzlCLG1CQUFjLEdBQVcsSUFBSSxDQUFDO1FBQzlCLG1CQUFjLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQzVCLGNBQVMsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDO1FBRWpCLGlCQUFZLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFDMUQsZ0JBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUN6RCxjQUFTLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFDdkQsZ0JBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUN6RCxZQUFP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OEJBUXBDLFlBQVksU0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUM7O0lBU3pDLHNCQUFDO0NBQUEsQUF6SUQsSUF5SUM7U0FySVksZUFBZTs7O0lBQ3hCLGlDQUFlOztJQUNmLHNDQUEyQjs7SUFDM0Isc0NBQTJCOztJQUMzQixtQ0FBd0I7O0lBQ3hCLG1DQUF3Qjs7SUFDeEIseUNBQThCOztJQUM5Qix5Q0FBOEI7O0lBQzlCLHlDQUE0Qjs7SUFDNUIsb0NBQTJCOztJQUUzQix1Q0FBb0U7O0lBQ3BFLHNDQUFtRTs7SUFDbkUsb0NBQWlFOztJQUNqRSxzQ0FBbUU7O0lBQ25FLGtDQUErRDs7SUFDL0QsdUNBQW9FOztJQUNwRSxxQ0FBa0U7O0lBQ2xFLG9DQUFpRTs7SUFDakUscUNBQWtFOzs7OztJQUc5RCw2QkFBc0I7Ozs7O0lBQ3RCLG1DQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuY29uc3QgWkVSTyA9IDAuMDAwMDAwMDAwMDAxO1xuY29uc3QgRElSRUNUSU9OID0ge1xuICBMRUZUIDogJ2xlZnQnLFxuICBSSUdIVCA6ICdyaWdodCcsXG4gIFVQIDogJ3VwJyxcbiAgRE9XTiA6ICdkb3duJyxcbiAgTk9ORSA6ICdub25lJyxcbn07XG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tzd2lwZXJdJyxcbiAgICBleHBvcnRBczogJ3N3aXBlcidcbn0pXG5leHBvcnQgY2xhc3MgU3dpcGVyRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBpc0Rvd24gPSBmYWxzZTtcbiAgICBpbml0aWFsUG9zWDogbnVtYmVyID0gWkVSTztcbiAgICBpbml0aWFsUG9zWTogbnVtYmVyID0gWkVSTztcbiAgICBsYXN0UG9zWDogbnVtYmVyID0gWkVSTztcbiAgICBsYXN0UG9zWTogbnVtYmVyID0gWkVSTztcbiAgICBzd2lwZURpc3RhbmNlWDogbnVtYmVyID0gWkVSTztcbiAgICBzd2lwZURpc3RhbmNlWTogbnVtYmVyID0gWkVSTztcbiAgICBmaXJzdFN3aXBlRGF0ZSA9IERhdGUubm93KCk7XG4gICAgZGlyZWN0aW9uID0gRElSRUNUSU9OLk5PTkU7XG5cbiAgICBAT3V0cHV0KCkgb25Td2lwZVJpZ2h0OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBvblN3aXBlTGVmdDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgb25Td2lwZVVwOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBvblN3aXBlRG93bjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgb25Td2lwZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICBAT3V0cHV0KCkgb25Td2lwZVN0YXJ0OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBvblN3aXBlRW5kOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICAgIEBPdXRwdXQoKSBzd2lwZUxlZnQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gICAgQE91dHB1dCgpIHN3aXBlUmlnaHQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBlbDogRWxlbWVudFJlZixcbiAgICAgICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyXG4gICAgKSB7IH1cblxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgfVxuXG4gICAgZ2V0UmVzdWx0RnJvbUV2ZW50KGV2ZW50KSB7XG4gICAgICBsZXQgc3dpcGVGcmFtZURpc3RhbmNlWCA9IGV2ZW50LmNsaWVudFggLSB0aGlzLmluaXRpYWxQb3NYIC0gdGhpcy5sYXN0UG9zWDtcbiAgICAgIHN3aXBlRnJhbWVEaXN0YW5jZVggPSBzd2lwZUZyYW1lRGlzdGFuY2VYIDwgMzAgPyBzd2lwZUZyYW1lRGlzdGFuY2VYIDogMzA7XG4gICAgICB0aGlzLnN3aXBlRGlzdGFuY2VYICs9IHN3aXBlRnJhbWVEaXN0YW5jZVg7XG5cbiAgICAgIGxldCBzd2lwZUZyYW1lRGlzdGFuY2VZID0gZXZlbnQuY2xpZW50WSAtIHRoaXMuaW5pdGlhbFBvc1kgLSB0aGlzLmxhc3RQb3NZO1xuICAgICAgc3dpcGVGcmFtZURpc3RhbmNlWSA9IHN3aXBlRnJhbWVEaXN0YW5jZVkgPCAzMCA/IHN3aXBlRnJhbWVEaXN0YW5jZVkgOiAzMDtcbiAgICAgIHRoaXMuc3dpcGVEaXN0YW5jZVkgKz0gc3dpcGVGcmFtZURpc3RhbmNlWTtcblxuICAgICAgdGhpcy5sYXN0UG9zWCA9IGV2ZW50LmNsaWVudFggLSB0aGlzLmluaXRpYWxQb3NYO1xuICAgICAgdGhpcy5sYXN0UG9zWSA9IGV2ZW50LmNsaWVudFkgLSB0aGlzLmluaXRpYWxQb3NZO1xuXG4gICAgICBjb25zdCByZXMgPSB7XG4gICAgICAgIHZlbG9jaXR5WDogc3dpcGVGcmFtZURpc3RhbmNlWCxcbiAgICAgICAgdmVsb2NpdHlZOiBzd2lwZUZyYW1lRGlzdGFuY2VZLFxuICAgICAgICBpc0ZpbmFsOiBmYWxzZSxcbiAgICAgICAgZGlyZWN0aW9uOiB0aGlzLmRpcmVjdGlvbixcbiAgICAgICAgZXZlbnQ6IGV2ZW50LFxuICAgICAgfTtcbiAgICAgIHJldHVybiByZXM7XG4gICAgfVxuXG4gICAgc3dpcGVTdGFydChldmVudCkge1xuICAgICAgdGhpcy5maXJzdFN3aXBlRGF0ZSA9IERhdGUubm93KCk7XG4gICAgICB0aGlzLmlzRG93biA9IHRydWU7XG4gICAgICB0aGlzLmluaXRpYWxQb3NYID0gZXZlbnQuY2xpZW50WDtcbiAgICAgIHRoaXMuaW5pdGlhbFBvc1kgPSBldmVudC5jbGllbnRZO1xuICAgICAgdGhpcy5zd2lwZURpc3RhbmNlWCA9IFpFUk87XG4gICAgICB0aGlzLnN3aXBlRGlzdGFuY2VZID0gWkVSTztcbiAgICAgIHRoaXMub25Td2lwZVN0YXJ0LmVtaXQoKTtcbiAgICB9XG5cbiAgICBzd2lwZUVuZChldmVudCkge1xuICAgICAgdGhpcy5pbml0aWFsUG9zWCA9IHRoaXMubGFzdFBvc1ggPSBaRVJPO1xuICAgICAgdGhpcy5pbml0aWFsUG9zWSA9IHRoaXMubGFzdFBvc1kgPSBaRVJPO1xuICAgICAgdGhpcy5pc0Rvd24gPSBmYWxzZTtcbiAgICAgIGNvbnN0IHJlcyA9IHtcbiAgICAgICAgdmVsb2NpdHlYOiAwLFxuICAgICAgICB2ZWxvY2l0eVk6IDAsXG4gICAgICAgIGlzRmluYWw6ICF0aGlzLmlzRG93bixcbiAgICAgIH07XG4gICAgICB0aGlzLm9uU3dpcGVFbmQuZW1pdChyZXMpO1xuICAgICAgdGhpcy5zd2lwZURpc3RhbmNlWCA9IFpFUk87XG4gICAgICB0aGlzLnN3aXBlRGlzdGFuY2VZID0gWkVSTztcbiAgICB9XG5cbiAgICBzd2lwZU1vdmUoZXZlbnQpIHtcbiAgICAgIGNvbnN0IHJlcyA9IHRoaXMuZ2V0UmVzdWx0RnJvbUV2ZW50KGV2ZW50KTtcbiAgICAgIGlmIChyZXMudmVsb2NpdHlYID4gMCkge1xuICAgICAgICB0aGlzLmRpcmVjdGlvbiA9IERJUkVDVElPTi5MRUZUO1xuICAgICAgICB0aGlzLm9uU3dpcGVMZWZ0LmVtaXQocmVzKTtcbiAgICAgIH0gZWxzZSBpZiAocmVzLnZlbG9jaXR5WCA8IDApIHtcbiAgICAgICAgdGhpcy5kaXJlY3Rpb24gPSBESVJFQ1RJT04uUklHSFQ7XG4gICAgICAgIHRoaXMub25Td2lwZVJpZ2h0LmVtaXQocmVzKTtcbiAgICAgIH0gZWxzZSBpZiAocmVzLnZlbG9jaXR5WSA+IDApIHtcbiAgICAgICAgdGhpcy5kaXJlY3Rpb24gPSBESVJFQ1RJT04uRE9XTjtcbiAgICAgICAgdGhpcy5vblN3aXBlRG93bi5lbWl0KHJlcyk7XG4gICAgICB9IGVsc2UgaWYgKHJlcy52ZWxvY2l0eVkgPCAwKSB7XG4gICAgICAgIHRoaXMuZGlyZWN0aW9uID0gRElSRUNUSU9OLlVQO1xuICAgICAgICB0aGlzLm9uU3dpcGVVcC5lbWl0KHJlcyk7XG4gICAgICB9XG4gICAgICB0aGlzLm9uU3dpcGUuZW1pdChyZXMpO1xuICAgIH1cblxuICAgIEBIb3N0TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBbJyRldmVudCddKVxuICAgIG9uVG91Y2hTdGFydChldmVudDogYW55KSB7XG4gICAgICAgIGNvbnN0IHRvdWNoID0gZXZlbnQudG91Y2hlc1swXSB8fCBldmVudC5jaGFuZ2VkVG91Y2hlc1swXTtcbiAgICAgICAgdGhpcy5zd2lwZVN0YXJ0KHRvdWNoKTtcbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKCdtb3VzZWRvd24nLCBbJyRldmVudCddKVxuICAgIG9uTW91c2VEb3duKGV2ZW50OiBhbnkpIHtcbiAgICAgICAgdGhpcy5zd2lwZVN0YXJ0KGV2ZW50KTtcbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDptb3VzZXVwJywgWyckZXZlbnQnXSlcbiAgICBvbk1vdXNlVXAoZXZlbnQ6IGFueSkge1xuICAgICAgdGhpcy5zd2lwZUVuZChldmVudCk7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcigndG91Y2hlbmQnLCBbJyRldmVudCddKVxuICAgIG9uVG91Y2hFbmQoZXZlbnQ6IGFueSkge1xuICAgICAgY29uc3QgdG91Y2ggPSBldmVudC50b3VjaGVzWzBdIHx8IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdO1xuICAgICAgdGhpcy5zd2lwZUVuZCh0b3VjaCk7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignbW91c2Vtb3ZlJywgWyckZXZlbnQnXSlcbiAgICBvbk1vdXNlTW92ZShldmVudDogYW55KSB7XG4gICAgICBpZiAodGhpcy5pc0Rvd24pIHtcbiAgICAgICAgdGhpcy5zd2lwZU1vdmUoZXZlbnQpO1xuICAgICAgfVxuXG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcigndG91Y2htb3ZlJywgWyckZXZlbnQnXSlcbiAgICBvblRvdWNoTW92ZShldmVudDogYW55KSB7XG4gICAgICBjb25zdCB0b3VjaCA9IGV2ZW50LnRvdWNoZXNbMF0gfHwgZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF07XG4gICAgICB0aGlzLnN3aXBlTW92ZSh0b3VjaCk7XG4gICAgfVxuXG5cblxuXG59XG4iXX0=